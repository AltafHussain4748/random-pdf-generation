{"ast":null,"code":"var _jsxFileName = \"/var/www/test/frontend/src/components/ErrorBoundary.tsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(_) {\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  render() {\n    const {\n      hasError\n    } = this.state;\n    const {\n      children\n    } = this.props;\n\n    if (hasError) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sorry.. there was an error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    }\n\n    return children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/var/www/test/frontend/src/components/ErrorBoundary.tsx"],"names":["React","Component","ErrorBoundary","constructor","props","state","hasError","getDerivedStateFromError","_","componentDidCatch","error","errorInfo","console","render","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAuD,OAAvD;;;AAUA,MAAMC,aAAN,SAA4BD,SAA5B,CAAoD;AAClDE,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEqC,SAAxBC,wBAAwB,CAACC,CAAD,EAAkB;AACtD,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEMG,EAAAA,iBAAiB,CAACC,KAAD,EAAeC,SAAf,EAAqC;AAC3DC,IAAAA,OAAO,CAACF,KAAR,CAAc,iBAAd,EAAiCA,KAAjC,EAAwCC,SAAxC;AACD;;AAEME,EAAAA,MAAM,GAAG;AACd,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAM;AAAES,MAAAA;AAAF,QAAe,KAAKV,KAA1B;;AACA,QAAIE,QAAJ,EAAc;AACZ,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,WAAOQ,QAAP;AACD;;AAvBiD;;AA0BpD,eAAeZ,aAAf","sourcesContent":["import React, { Component, ErrorInfo, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  public static getDerivedStateFromError(_: Error): State {\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  public render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return <h1>Sorry.. there was an error</h1>;\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}